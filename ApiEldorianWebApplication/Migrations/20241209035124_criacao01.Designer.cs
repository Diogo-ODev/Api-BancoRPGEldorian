// <auto-generated />
using ApiEldorianWebApplication.BancoDeDados;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ApiEldorianWebApplication.Migrations
{
    [DbContext(typeof(BancoContext))]
    [Migration("20241209035124_criacao01")]
    partial class criacao01
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.4");

            modelBuilder.Entity("ApiEldorianWebApplication.Modelos.Personagem", b =>
                {
                    b.Property<int>("idPersonagem")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("RacaidRaca")
                        .HasColumnType("INTEGER");

                    b.Property<int>("idAtributo")
                        .HasColumnType("INTEGER");

                    b.Property<int>("idClasse")
                        .HasColumnType("INTEGER");

                    b.Property<int>("idEfeito")
                        .HasColumnType("INTEGER");

                    b.Property<int>("idHabilidade")
                        .HasColumnType("INTEGER");

                    b.Property<int>("idItemPersonagem")
                        .HasColumnType("INTEGER");

                    b.Property<int>("idMagia")
                        .HasColumnType("INTEGER");

                    b.Property<int>("idNivel")
                        .HasColumnType("INTEGER");

                    b.Property<int>("idPet")
                        .HasColumnType("INTEGER");

                    b.Property<int>("idRaca")
                        .HasColumnType("INTEGER");

                    b.Property<int>("idUsuario")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("manaPersonamge")
                        .HasColumnType("TEXT");

                    b.Property<string>("nomePersonagem")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<decimal>("pesoMaximoPersonagem")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("vidaPersonagem")
                        .HasColumnType("TEXT");

                    b.Property<int>("vigorPersonagem")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("xpAtualPersonagem")
                        .HasColumnType("TEXT");

                    b.HasKey("idPersonagem");

                    b.HasIndex("RacaidRaca");

                    b.HasIndex("idUsuario");

                    b.ToTable("Personagens");
                });

            modelBuilder.Entity("ApiEldorianWebApplication.Modelos.Raca", b =>
                {
                    b.Property<int>("idRaca")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("beneficioRaca")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("descricaoRaca")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("nomeRaca")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("passivaRaca")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("sinergiaStatusRaca")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("idRaca");

                    b.ToTable("Racas");
                });

            modelBuilder.Entity("ApiEldorianWebApplication.Modelos.Usuario", b =>
                {
                    b.Property<int>("idUsuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("emailUsuario")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("nomeUsuario")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("senhaUsuario")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("idUsuario");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("ApiEldorianWebApplication.Modelos.Personagem", b =>
                {
                    b.HasOne("ApiEldorianWebApplication.Modelos.Raca", "Raca")
                        .WithMany()
                        .HasForeignKey("RacaidRaca")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ApiEldorianWebApplication.Modelos.Usuario", null)
                        .WithMany("Personagens")
                        .HasForeignKey("idPersonagem")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("ApiEldorianWebApplication.Modelos.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("idUsuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Raca");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("ApiEldorianWebApplication.Modelos.Usuario", b =>
                {
                    b.Navigation("Personagens");
                });
#pragma warning restore 612, 618
        }
    }
}
